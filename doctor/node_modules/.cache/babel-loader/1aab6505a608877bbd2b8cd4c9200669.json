{"ast":null,"code":"var _jsxFileName = \"/Users/toppr/myDoctor+/myDoc+/doctor/src/components/consult/index.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Header from \"../header\";\nimport SubHeader from \"../subHeader\";\nimport DoctorSection from \"./doctorSection\";\nimport Modal from \"react-modal\";\nimport Checkbox from \"../../shared/checkbox\";\nimport SelectedMed from \"./selectedMed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Consult() {\n  _s();\n\n  const medNotesRef = useRef();\n  const diaNotesRef = useRef();\n  const commonNotesRef = useRef();\n  const testsNotesRef = useRef();\n  const [selected, setSelected] = useState([]);\n  const [configuration, setConfiguration] = useState([]);\n  const [med, setMed] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalCheckedData, setModalCheckedData] = useState({\n    medicine: false,\n    vitals: false,\n    advice: false,\n    diagnosis: false\n  });\n  const [isMedLoading, setIsMedLoading] = useState(false);\n  const [medMetrics, setmedMetrics] = useState([]);\n  const [restDropDowndata, setrestDropDowndata] = useState({\n    diagnosis: [],\n    tests: []\n  });\n\n  const handleGetMedicines = () => {\n    axios.get(\"https://myplusdoctor.med2myhome.com/api/getmedicines?name=\").then(res => {\n      setMed(res.data.data.medicines);\n    });\n  };\n\n  const getConfigurations = () => {\n    axios.get(\"https://myplusdoctor.med2myhome.com/api/configuration\").then(res => {\n      setConfiguration(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getConfigurations();\n    handleGetMedicines();\n  }, []);\n\n  const handleMedicineSearch = val => {\n    setIsMedLoading(true);\n\n    if (val.length > 3) {\n      axios.get(`https://myplusdoctor.med2myhome.com/api/getmedicines?name=${val}`).then(res => {\n        setMed(res.data.data.medicines);\n        setIsMedLoading(false);\n      });\n    }\n  };\n\n  const handleMedChange = (data, from) => {\n    console.log(data, from);\n    const store = [...data];\n\n    if (from === \"Medicine\") {\n      setSelected(store);\n      const metricObj = {\n        id: \"\",\n        dosage: {\n          0: 0,\n          1: 0,\n          2: 0\n        },\n        is_before_food: \"\",\n        time: \"\",\n        freq: \"\"\n      };\n      const forMetrics = store.map(item => {\n        return { ...metricObj,\n          id: item.id\n        };\n      });\n      setmedMetrics(forMetrics);\n    } else {\n      let store = { ...restDropDowndata\n      };\n      const temp = {};\n      const dataWithIds = data.map((item, index) => {\n        temp[index] = item.id;\n      });\n      const check = { ...store,\n        [from.toLowerCase()]: dataWithIds\n      };\n      setrestDropDowndata(check);\n      console.log(store);\n    }\n  };\n\n  const handleCompleteAppointment = () => {// setShowModal(true);\n  };\n\n  const handleModalCheckboxData = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    const data = { ...modalCheckedData,\n      [name.toLowerCase()]: checked\n    };\n    setModalCheckedData(data);\n  };\n\n  const handleMedMetricsChange = e => {\n    const {\n      name,\n      checked,\n      id,\n      value,\n      dataset\n    } = e.target;\n    const data = [...medMetrics];\n    const store = data.map(item => {\n      if (+item.id === +id) {\n        return { ...item,\n          [name]: value,\n          dosage: { ...(name == \"dosage\" ? { ...item.dosage,\n              [dataset.id]: +checked\n            } : { ...item.dosage\n            })\n          }\n        };\n      }\n\n      return item;\n    });\n    setmedMetrics([...store]);\n  };\n\n  useEffect(() => {\n    console.log(medMetrics);\n  }, [medMetrics]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubHeader, {\n        label: \"Doctor consultation\",\n        completeBtn: {\n          label: \"Complete Consultation\",\n          onclick: handleCompleteAppointment\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"consult-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctor-work-sec\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-container\",\n            children: [/*#__PURE__*/_jsxDEV(DoctorSection, {\n              title: \"Medicine\",\n              onsearch: handleMedicineSearch,\n              onchange: handleMedChange,\n              options: med,\n              selected: selected,\n              configuration: configuration,\n              loading: isMedLoading,\n              refs: medNotesRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DoctorSection, {\n              title: \"Diagnosis\",\n              onsearch: handleMedicineSearch,\n              onchange: handleMedChange,\n              options: med,\n              selected: selected,\n              configuration: configuration,\n              refs: diaNotesRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DoctorSection, {\n              title: \"Tests\",\n              onsearch: handleMedicineSearch,\n              onchange: handleMedChange,\n              options: med,\n              selected: selected,\n              configuration: configuration,\n              refs: testsNotesRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DoctorSection, {\n              title: \"Common Notes\",\n              onsearch: handleMedicineSearch,\n              onchange: handleMedChange,\n              options: false,\n              selected: selected,\n              configuration: configuration,\n              refs: commonNotesRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), selected.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selectedMed\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: \"Selected Medicines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SelectedMed, {\n              selected: selected,\n              configuration: configuration,\n              onchange: handleMedMetricsChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal // onAfterOpen={afterOpenModal}\n      // onRequestClose={closeModal}\n      // style={customStyles}\n      // contentLabel=\"Example Modal\"\n      ,\n      className: \"custom-modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Complete Prescription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"close\",\n          onClick: () => setShowModal(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-content mt-3 \",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          label: \"Send Patinet Vitals\",\n          onchange: handleModalCheckboxData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          label: \"Send Medicine\",\n          onchange: handleModalCheckboxData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          label: \"Send Advice\",\n          onchange: handleModalCheckboxData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          label: \"Send Diagnosis\",\n          onchange: handleModalCheckboxData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-modal d-flex justify-content-end \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn btn-outline-secondary me-3\",\n          onClick: () => setShowModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-primary\",\n          children: \"Send prescription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Consult, \"3TNju25pxhiaMUHvPM0xO4lBqEY=\");\n\n_c = Consult;\n\nvar _c;\n\n$RefreshReg$(_c, \"Consult\");","map":{"version":3,"sources":["/Users/toppr/myDoctor+/myDoc+/doctor/src/components/consult/index.js"],"names":["axios","React","useEffect","useRef","useState","Header","SubHeader","DoctorSection","Modal","Checkbox","SelectedMed","Consult","medNotesRef","diaNotesRef","commonNotesRef","testsNotesRef","selected","setSelected","configuration","setConfiguration","med","setMed","showModal","setShowModal","modalCheckedData","setModalCheckedData","medicine","vitals","advice","diagnosis","isMedLoading","setIsMedLoading","medMetrics","setmedMetrics","restDropDowndata","setrestDropDowndata","tests","handleGetMedicines","get","then","res","data","medicines","getConfigurations","catch","err","console","log","handleMedicineSearch","val","length","handleMedChange","from","store","metricObj","id","dosage","is_before_food","time","freq","forMetrics","map","item","temp","dataWithIds","index","check","toLowerCase","handleCompleteAppointment","handleModalCheckboxData","e","name","checked","target","handleMedMetricsChange","value","dataset","label","onclick"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAGhC,QAAMC,WAAW,GAAGT,MAAM,EAA1B;AACA,QAAMU,WAAW,GAAGV,MAAM,EAA1B;AACA,QAAMW,cAAc,GAAGX,MAAM,EAA7B;AACA,QAAMY,aAAa,GAAGZ,MAAM,EAA5B;AAIA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACoB,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC;AACvDsB,IAAAA,QAAQ,EAAE,KAD6C;AAEvDC,IAAAA,MAAM,EAAE,KAF+C;AAGvDC,IAAAA,MAAM,EAAE,KAH+C;AAIvDC,IAAAA,SAAS,EAAE;AAJ4C,GAAD,CAAxD;AAMA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC4B,UAAD,EAAaC,aAAb,IAA8B7B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC8B,gBAAD,EAAmBC,mBAAnB,IAA0C/B,QAAQ,CAAC;AACvDyB,IAAAA,SAAS,EAAC,EAD6C;AAEvDO,IAAAA,KAAK,EAAC;AAFiD,GAAD,CAAxD;;AAKA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BrC,IAAAA,KAAK,CACFsC,GADH,CACO,4DADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbnB,MAAAA,MAAM,CAACmB,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcC,SAAf,CAAN;AACD,KAJH;AAKD,GAND;;AAQA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B3C,IAAAA,KAAK,CACFsC,GADH,CACO,uDADP,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbrB,MAAAA,gBAAgB,CAACqB,GAAG,CAACC,IAAL,CAAhB;AACD,KAJH,EAKGG,KALH,CAKUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMD,GAPD;;AASA3C,EAAAA,SAAS,CAAC,MAAM;AACdyC,IAAAA,iBAAiB;AACjBN,IAAAA,kBAAkB;AACnB,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMW,oBAAoB,GAAIC,GAAD,IAAS;AACpClB,IAAAA,eAAe,CAAC,IAAD,CAAf;;AACA,QAAIkB,GAAG,CAACC,MAAJ,GAAa,CAAjB,EAAoB;AAClBlD,MAAAA,KAAK,CACFsC,GADH,CACQ,6DAA4DW,GAAI,EADxE,EAEGV,IAFH,CAESC,GAAD,IAAS;AACbnB,QAAAA,MAAM,CAACmB,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcC,SAAf,CAAN;AACAX,QAAAA,eAAe,CAAC,KAAD,CAAf;AACD,OALH;AAMD;AACF,GAVD;;AAYA,QAAMoB,eAAe,GAAG,CAACV,IAAD,EAAMW,IAAN,KAAe;AACrCN,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ,EAAiBW,IAAjB;AACA,UAAMC,KAAK,GAAG,CAAC,GAAGZ,IAAJ,CAAd;;AACA,QAAIW,IAAI,KAAK,UAAb,EAAwB;AACtBnC,MAAAA,WAAW,CAACoC,KAAD,CAAX;AACA,YAAMC,SAAS,GAAG;AAChBC,QAAAA,EAAE,EAAE,EADY;AAEhBC,QAAAA,MAAM,EAAE;AAAE,aAAG,CAAL;AAAQ,aAAG,CAAX;AAAc,aAAG;AAAjB,SAFQ;AAGhBC,QAAAA,cAAc,EAAE,EAHA;AAIhBC,QAAAA,IAAI,EAAE,EAJU;AAKhBC,QAAAA,IAAI,EAAE;AALU,OAAlB;AAOA,YAAMC,UAAU,GAAGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAU;AACrC,eAAO,EAAE,GAAGR,SAAL;AAAgBC,UAAAA,EAAE,EAAEO,IAAI,CAACP;AAAzB,SAAP;AACD,OAFkB,CAAnB;AAGAtB,MAAAA,aAAa,CAAC2B,UAAD,CAAb;AACD,KAbD,MAaK;AACH,UAAIP,KAAK,GAAG,EAAC,GAAGnB;AAAJ,OAAZ;AACA,YAAM6B,IAAI,GAAG,EAAb;AACA,YAAMC,WAAW,GAAGvB,IAAI,CAACoB,GAAL,CAAS,CAACC,IAAD,EAAMG,KAAN,KAAc;AACzCF,QAAAA,IAAI,CAACE,KAAD,CAAJ,GAAcH,IAAI,CAACP,EAAnB;AACD,OAFmB,CAApB;AAIA,YAAMW,KAAK,GAAG,EACZ,GAAGb,KADS;AAEZ,SAACD,IAAI,CAACe,WAAL,EAAD,GAAsBH;AAFV,OAAd;AAKA7B,MAAAA,mBAAmB,CAAC+B,KAAD,CAAnB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD;AAEF,GAhCD;;AAkCA,QAAMe,yBAAyB,GAAG,MAAM,CACtC;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIC,CAAD,IAAO;AACrC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoBF,CAAC,CAACG,MAA5B;AACA,UAAMhC,IAAI,GAAG,EACX,GAAGjB,gBADQ;AAEX,OAAC+C,IAAI,CAACJ,WAAL,EAAD,GAAsBK;AAFX,KAAb;AAIA/C,IAAAA,mBAAmB,CAACgB,IAAD,CAAnB;AACD,GAPD;;AASA,QAAMiC,sBAAsB,GAAIJ,CAAD,IAAO;AACpC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBjB,MAAAA,EAAjB;AAAqBoB,MAAAA,KAArB;AAA4BC,MAAAA;AAA5B,QAAwCN,CAAC,CAACG,MAAhD;AAEA,UAAMhC,IAAI,GAAG,CAAC,GAAGT,UAAJ,CAAb;AAGA,UAAMqB,KAAK,GAAGZ,IAAI,CAACoB,GAAL,CAAUC,IAAD,IAAU;AAC/B,UAAI,CAACA,IAAI,CAACP,EAAN,KAAa,CAACA,EAAlB,EAAsB;AACpB,eAAO,EACL,GAAGO,IADE;AAEL,WAACS,IAAD,GAAQI,KAFH;AAGLnB,UAAAA,MAAM,EAAE,EACN,IAAIe,IAAI,IAAI,QAAR,GACA,EAAC,GAAGT,IAAI,CAACN,MAAT;AAAiB,eAACoB,OAAO,CAACrB,EAAT,GAAc,CAACiB;AAAhC,aADA,GAEA,EAAE,GAAGV,IAAI,CAACN;AAAV,aAFJ;AADM;AAHH,SAAP;AASD;;AACD,aAAOM,IAAP;AACD,KAba,CAAd;AAeA7B,IAAAA,aAAa,CAAC,CAAC,GAAGoB,KAAJ,CAAD,CAAb;AAGD,GAxBD;;AA2BAnD,EAAAA,SAAS,CAAC,MAAI;AACZ4C,IAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AAED,GAHQ,EAGP,CAACA,UAAD,CAHO,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE,qBADT;AAEE,QAAA,WAAW,EAAE;AACX6C,UAAAA,KAAK,EAAE,uBADI;AAEXC,UAAAA,OAAO,EAAEV;AAFE;AAFf;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,oCACE,QAAC,aAAD;AACE,cAAA,KAAK,EAAE,UADT;AAEE,cAAA,QAAQ,EAAEpB,oBAFZ;AAGE,cAAA,QAAQ,EAAEG,eAHZ;AAIE,cAAA,OAAO,EAAE/B,GAJX;AAKE,cAAA,QAAQ,EAAEJ,QALZ;AAME,cAAA,aAAa,EAAEE,aANjB;AAOE,cAAA,OAAO,EAAEY,YAPX;AAQE,cAAA,IAAI,EAAElB;AARR;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,aAAD;AACE,cAAA,KAAK,EAAE,WADT;AAEE,cAAA,QAAQ,EAAEoC,oBAFZ;AAGE,cAAA,QAAQ,EAAEG,eAHZ;AAIE,cAAA,OAAO,EAAE/B,GAJX;AAKE,cAAA,QAAQ,EAAEJ,QALZ;AAME,cAAA,aAAa,EAAEE,aANjB;AAOE,cAAA,IAAI,EAAEL;AAPR;AAAA;AAAA;AAAA;AAAA,oBAXF,eAoBE,QAAC,aAAD;AACE,cAAA,KAAK,EAAE,OADT;AAEE,cAAA,QAAQ,EAAEmC,oBAFZ;AAGE,cAAA,QAAQ,EAAEG,eAHZ;AAIE,cAAA,OAAO,EAAE/B,GAJX;AAKE,cAAA,QAAQ,EAAEJ,QALZ;AAME,cAAA,aAAa,EAAEE,aANjB;AAOE,cAAA,IAAI,EAAEH;AAPR;AAAA;AAAA;AAAA;AAAA,oBApBF,eA6BE,QAAC,aAAD;AACE,cAAA,KAAK,EAAE,cADT;AAEE,cAAA,QAAQ,EAAEiC,oBAFZ;AAGE,cAAA,QAAQ,EAAEG,eAHZ;AAIE,cAAA,OAAO,EAAE,KAJX;AAKE,cAAA,QAAQ,EAAEnC,QALZ;AAME,cAAA,aAAa,EAAEE,aANjB;AAOE,cAAA,IAAI,EAAEJ;AAPR;AAAA;AAAA;AAAA;AAAA,oBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAwCGE,QAAQ,CAACkC,MAAT,gBACC;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,WAAD;AACE,cAAA,QAAQ,EAAElC,QADZ;AAEE,cAAA,aAAa,EAAEE,aAFjB;AAGE,cAAA,QAAQ,EAAEwD;AAHZ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GASG,IAjDN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoEE,QAAC,KAAD;AACE,MAAA,MAAM,EAAEpD,SADV,CAEE;AACA;AACA;AACA;AALF;AAME,MAAA,SAAS,EAAC,sBANZ;AAAA,8BAQE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAuB,UAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAcE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE,QAAC,QAAD;AACE,UAAA,KAAK,EAAE,qBADT;AAEE,UAAA,QAAQ,EAAE8C;AAFZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,QAAD;AACE,UAAA,KAAK,EAAE,eADT;AAEE,UAAA,QAAQ,EAAEA;AAFZ;AAAA;AAAA;AAAA;AAAA,gBALF,eASE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,aAAjB;AAAgC,UAAA,QAAQ,EAAEA;AAA1C;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,QAAD;AACE,UAAA,KAAK,EAAE,gBADT;AAEE,UAAA,QAAQ,EAAEA;AAFZ;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eA6BE;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,oCADZ;AAEE,UAAA,OAAO,EAAE,MAAM9C,YAAY,CAAC,KAAD,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YApEF;AAAA,kBADF;AA8GD;;GA1PuBZ,O;;KAAAA,O","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Header from \"../header\";\nimport SubHeader from \"../subHeader\";\nimport DoctorSection from \"./doctorSection\";\nimport Modal from \"react-modal\";\nimport Checkbox from \"../../shared/checkbox\";\nimport SelectedMed from \"./selectedMed\";\n\nexport default function Consult() {\n\n\n  const medNotesRef = useRef();\n  const diaNotesRef = useRef();\n  const commonNotesRef = useRef();\n  const testsNotesRef = useRef();\n\n  \n\n  const [selected, setSelected] = useState([]);\n  const [configuration, setConfiguration] = useState([]);\n  const [med, setMed] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalCheckedData, setModalCheckedData] = useState({\n    medicine: false,\n    vitals: false,\n    advice: false,\n    diagnosis: false,\n  });\n  const [isMedLoading, setIsMedLoading] = useState(false);\n  const [medMetrics, setmedMetrics] = useState([]);\n  const [restDropDowndata, setrestDropDowndata] = useState({\n    diagnosis:[],\n    tests:[]\n  });\n\n  const handleGetMedicines = () => {\n    axios\n      .get(\"https://myplusdoctor.med2myhome.com/api/getmedicines?name=\")\n      .then((res) => {\n        setMed(res.data.data.medicines);\n      });\n  };\n\n  const getConfigurations = () => {\n    axios\n      .get(\"https://myplusdoctor.med2myhome.com/api/configuration\")\n      .then((res) => {\n        setConfiguration(res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  useEffect(() => {\n    getConfigurations();\n    handleGetMedicines();\n  }, []);\n\n  const handleMedicineSearch = (val) => {\n    setIsMedLoading(true);\n    if (val.length > 3) {\n      axios\n        .get(`https://myplusdoctor.med2myhome.com/api/getmedicines?name=${val}`)\n        .then((res) => {\n          setMed(res.data.data.medicines);\n          setIsMedLoading(false);\n        });\n    }\n  };\n\n  const handleMedChange = (data,from) => {\n    console.log(data,from)\n    const store = [...data];\n    if (from === \"Medicine\"){\n      setSelected(store);\n      const metricObj = {\n        id: \"\",\n        dosage: { 0: 0, 1: 0, 2: 0 },\n        is_before_food: \"\",\n        time: \"\",\n        freq: \"\",\n      };\n      const forMetrics = store.map((item) => {\n        return { ...metricObj, id: item.id };\n      });\n      setmedMetrics(forMetrics);\n    }else{\n      let store = {...restDropDowndata};\n      const temp = {}\n      const dataWithIds = data.map((item,index)=>{\n        temp[index] = item.id\n      })\n\n      const check = {\n        ...store,\n        [from.toLowerCase()]: dataWithIds,\n      };\n\n      setrestDropDowndata(check)\n      console.log(store)\n    }\n      \n  };\n\n  const handleCompleteAppointment = () => {\n    // setShowModal(true);\n  };\n\n  const handleModalCheckboxData = (e) => {\n    const { name, checked } = e.target;\n    const data = {\n      ...modalCheckedData,\n      [name.toLowerCase()]: checked,\n    };\n    setModalCheckedData(data);\n  };\n\n  const handleMedMetricsChange = (e) => {\n    const { name, checked, id, value, dataset } = e.target;\n\n    const data = [...medMetrics];\n\n    \n    const store = data.map((item) => {\n      if (+item.id === +id) {\n        return {\n          ...item,\n          [name]: value,\n          dosage: {\n            ...(name == \"dosage\"\n              ? {...item.dosage, [dataset.id]: +checked  }\n              : { ...item.dosage }),\n          },\n        };\n      }\n      return item\n    });\n\n    setmedMetrics([...store])\n\n\n  };\n\n\n  useEffect(()=>{\n    console.log(medMetrics)\n\n  },[medMetrics])\n\n  return (\n    <>\n      <div>\n        <Header />\n        <SubHeader\n          label={\"Doctor consultation\"}\n          completeBtn={{\n            label: \"Complete Consultation\",\n            onclick: handleCompleteAppointment,\n          }}\n        />\n        <div className=\"consult-content\">\n          <div className=\"video-content\">\n            <div className=\"video\"></div>\n          </div>\n          <div className=\"doctor-work-sec\">\n            <div className=\"section-container\">\n              <DoctorSection\n                title={\"Medicine\"}\n                onsearch={handleMedicineSearch}\n                onchange={handleMedChange}\n                options={med}\n                selected={selected}\n                configuration={configuration}\n                loading={isMedLoading}\n                refs={medNotesRef}\n              />\n              <DoctorSection\n                title={\"Diagnosis\"}\n                onsearch={handleMedicineSearch}\n                onchange={handleMedChange}\n                options={med}\n                selected={selected}\n                configuration={configuration}\n                refs={diaNotesRef}\n              />\n              <DoctorSection\n                title={\"Tests\"}\n                onsearch={handleMedicineSearch}\n                onchange={handleMedChange}\n                options={med}\n                selected={selected}\n                configuration={configuration}\n                refs={testsNotesRef}\n              />\n              <DoctorSection\n                title={\"Common Notes\"}\n                onsearch={handleMedicineSearch}\n                onchange={handleMedChange}\n                options={false}\n                selected={selected}\n                configuration={configuration}\n                refs={commonNotesRef}\n              />\n            </div>\n            {selected.length ? (\n              <div className=\"selectedMed\">\n                <div className=\"title\">Selected Medicines</div>\n                <SelectedMed\n                  selected={selected}\n                  configuration={configuration}\n                  onchange={handleMedMetricsChange}\n                />\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n\n      <Modal\n        isOpen={showModal}\n        // onAfterOpen={afterOpenModal}\n        // onRequestClose={closeModal}\n        // style={customStyles}\n        // contentLabel=\"Example Modal\"\n        className=\"custom-modal-content\"\n      >\n        <div className=\"header d-flex justify-content-between\">\n          <div className=\"title\">Complete Prescription</div>\n          <div className=\"close\" onClick={() => setShowModal(false)}>\n            X\n          </div>\n        </div>\n        <div className=\"body-content mt-3 \">\n          <Checkbox\n            label={\"Send Patinet Vitals\"}\n            onchange={handleModalCheckboxData}\n          />\n          <Checkbox\n            label={\"Send Medicine\"}\n            onchange={handleModalCheckboxData}\n          />\n          <Checkbox label={\"Send Advice\"} onchange={handleModalCheckboxData} />\n          <Checkbox\n            label={\"Send Diagnosis\"}\n            onchange={handleModalCheckboxData}\n          />\n        </div>\n        <div className=\"footer-modal d-flex justify-content-end \">\n          <div\n            className=\"btn btn btn-outline-secondary me-3\"\n            onClick={() => setShowModal(false)}\n          >\n            Close\n          </div>\n          <div className=\"btn btn-primary\">Send prescription</div>\n        </div>\n      </Modal>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}